# -*- coding: utf-8 -*-
"""HR ANALYTICS .ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1DoU7LJOYEGcPXxw9buiResk9N1fchs2L

Tasks to perform:
Data Cleaning:

Deleting redundant columns.

Renaming the columns.

Dropping duplicates.

Cleaning individual columns.

Remove the NaN values from the dataset

Check for some more Transformations

Data Visualization:

        Plot a correlation map for all numeric variables

        Overtime

        Marital Status

        Job Role

        Gender


        Education Field

        Department

        Business Travel

        Relation between Overtime and Age

        Total Working Years

        Education Level

        Number of Companies Worked

        Distance from Home

Reading thre dataset
"""

#reading the file
import pandas as pd
hr = pd.read_csv("hr.csv")

# viewing the dataset
print(hr.head())
# viewing the number of records
print(hr.shape)

# viewing the data types
print(hr.dtypes)
#retieving column names
print(hr.columns.values)

duplicated= hr[hr.duplicated()]
print(duplicated)

print(hr.isnull())

print(hr.shape)

print(hr.describe())

#dropping redundant columns
hr.drop(['EmployeeCount', 'Over18', 'EmployeeNumber','StandardHours','HourlyRate'], axis=1, inplace=True)

#dropping duplicates
hr.drop_duplicates(inplace=True)

"""objectives
to determine the distribution of the workplace based on the gender
the jobsatisfaction according to the jobrole
how the columns affect attrition (age, department, distancefromhome,education, gender, maritalstatus, performancerating,overtime, )
businesstravel and how it it affects
how distancefromhome affects jobsatisfaction, performancerating, monthlyincome, overtime, trainingtimeslastyear,

"""

import seaborn as sns
import matplotlib.pyplot as plt


numeric_cols = hr.select_dtypes(include='number')


correlation_matrix = numeric_cols.corr()


plt.figure(figsize=(14, 12))
sns.heatmap(correlation_matrix, annot=True, cmap='coolwarm', linewidths=0.5, fmt=".2f")
plt.title('Correlation Heatmap for Numeric Variables')
plt.show()

import matplotlib.pyplot as plt
import seaborn as sns


plt.figure(figsize=(10, 6))
sns.barplot(x='OverTime', y='JobSatisfaction', data=hr, palette='viridis')
plt.xlabel('OverTime')
plt.ylabel('JobSatisfaction')
plt.title('JobSatisfaction vs. OverTime')
plt.show()

import matplotlib.pyplot as plt
import pandas as pd


marital_attrition_counts = hr.groupby(['MaritalStatus', 'Attrition']).size().unstack()

# Create a bar chart
marital_attrition_counts.plot(kind='bar', stacked=True, figsize=(10, 6))
plt.xlabel('MaritalStatus')
plt.ylabel('Count')
plt.title('MaritalStatus vs. Attrition')
plt.legend(title='Attrition', labels=['No', 'Yes'])
plt.show()

import matplotlib.pyplot as plt
import pandas as pd


plt.figure(figsize=(10, 6))
plt.boxplot([hr[hr['Attrition'] == 'Yes']['TotalWorkingYears'], hr[hr['Attrition'] == 'No']['TotalWorkingYears']], labels=['Attrition: Yes', 'Attrition: No'])
plt.xlabel('Attrition')
plt.ylabel('TotalWorkingYears')
plt.title('Attrition vs. TotalWorkingYears')
plt.show()

import seaborn as sns
import matplotlib.pyplot as plt


plt.figure(figsize=(8, 6))
sns.countplot(x='MaritalStatus', hue='JobSatisfaction', data=hr)
plt.xlabel('MaritalStatus')
plt.ylabel('Count')
plt.title('MaritalStatus vs. JobSatisfaction')
plt.legend(title='JobSatisfaction')
plt.show()
